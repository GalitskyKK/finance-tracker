import React, { useMemo } from "react"
import { TrendingUp, TrendingDown, Wallet, Target, Calendar, Home, Award } from "lucide-react"
import { useTransactionFilterStore } from "@/store/transactionFilterStore"
import { useTransactionStoreSupabase } from "@/store/transactionStoreSupabase"
import { formatCurrency } from "@/utils/formatters"
import { format, startOfMonth, endOfMonth, isWithinInterval } from "date-fns"
import { ru } from "date-fns/locale"
import { PageHeader } from "@/components/ui/PageHeader"

interface DashboardProps {
  className?: string
  onPageChange?: (page: string) => void
}

export const Dashboard: React.FC<DashboardProps> = ({ className = "", onPageChange }) => {
  const { transactions } = useTransactionStoreSupabase()
  const { setFilter } = useTransactionFilterStore()

  // –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  const stats = useMemo(() => {
    const now = new Date()
    const startOfCurrentMonth = startOfMonth(now)
    const endOfCurrentMonth = endOfMonth(now)

    // –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    const totalIncome = transactions
      .filter((t) => t.type === "income")
      .reduce((sum, t) => sum + t.amount, 0)

    const totalExpenses = transactions
      .filter((t) => t.type === "expense")
      .reduce((sum, t) => sum + t.amount, 0)

    const totalBalance = totalIncome - totalExpenses

    // –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    const currentMonthTransactions = transactions.filter((transaction) => {
      const transactionDate = new Date(transaction.date)
      return isWithinInterval(transactionDate, {
        start: startOfCurrentMonth,
        end: endOfCurrentMonth
      })
    })

    const monthlyIncome = currentMonthTransactions
      .filter((t) => t.type === "income")
      .reduce((sum, t) => sum + t.amount, 0)

    const monthlyExpenses = currentMonthTransactions
      .filter((t) => t.type === "expense")
      .reduce((sum, t) => sum + t.amount, 0)

    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    const totalTransactions = transactions.length
    const monthlyTransactions = currentMonthTransactions.length

    return {
      totalBalance,
      totalIncome,
      totalExpenses,
      monthlyIncome,
      monthlyExpenses,
      totalTransactions,
      monthlyTransactions
    }
  }, [transactions])

  const ModernStatCard: React.FC<{
    title: string
    value: string
    subtitle?: string
    icon: React.ReactNode
    gradient: string
    iconColor: string
    description?: string
    onClick?: () => void
  }> = ({ title, value, subtitle, icon, gradient, iconColor, description, onClick }) => {
    return (
      <div
        onClick={onClick}
        className={`relative bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-lg hover:shadow-emerald-500/10 transition-all duration-200 group overflow-hidden ${
          onClick ? "cursor-pointer hover:scale-[1.02] active:scale-[0.98]" : ""
        }`}>
        {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω */}
        <div className={`absolute top-0 left-0 w-full h-1.5 ${gradient}`} />

        <div className="flex items-start justify-between">
          <div className="flex-1">
            <div className="flex items-center space-x-2 mb-3">
              <div className="p-2 rounded-xl bg-gray-50 group-hover:bg-gray-100 transition-colors duration-200">
                <div className={iconColor}>{icon}</div>
              </div>
              <h3 className="text-sm font-semibold text-gray-800">{title}</h3>
            </div>

            <div className="space-y-1">
              <p className="text-3xl font-bold text-gray-900">{value}</p>
              {subtitle && <p className="text-sm text-gray-500">{subtitle}</p>}
              {description && (
                <p className="text-xs text-gray-400 leading-relaxed">{description}</p>
              )}
            </div>
          </div>

          {onClick && (
            <div className="opacity-0 group-hover:opacity-100 transition-opacity duration-200 mt-1">
              <svg
                className="w-5 h-5 text-gray-400"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor">
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={1.5}
                  d="M9 5l7 7-7 7"
                />
              </svg>
            </div>
          )}
        </div>
      </div>
    )
  }

  return (
    <div className={className}>
      {/* Unified Header */}
      <PageHeader
        title="–ì–ª–∞–≤–Ω–∞—è"
        subtitle={`–í–∞—à —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ–±–∑–æ—Ä –∑–∞ ${format(new Date(), "MMMM yyyy", { locale: ru })}`}
        description={
          stats.totalBalance >= 0
            ? "–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í–∞—à–∏ —Ñ–∏–Ω–∞–Ω—Å—ã –≤ –ø–æ—Ä—è–¥–∫–µ üíö –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ö–æ–¥—ã."
            : "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–º —Ñ–∏–Ω–∞–Ω—Å—ã –≤ –ø–æ—Ä—è–¥–æ–∫! üìà –ù–∞—á–Ω–∏—Ç–µ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ç—Ä–∞—Ç."
        }
        icon={<Home className="w-5 h-5 text-white" />}
        collapsibleDescription={true}
      />

      {/* –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –º–µ—Ç—Ä–∏–∫ */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <ModernStatCard
          title="–ú–æ–π –±–∞–ª–∞–Ω—Å"
          value={formatCurrency(stats.totalBalance)}
          subtitle={stats.totalBalance >= 0 ? "–í—Å–µ —Ö–æ—Ä–æ—à–æ!" : "–ù—É–∂–Ω–æ –ø–æ–¥—Ç—è–Ω—É—Ç—å"}
          icon={<Wallet className="h-5 w-5" />}
          iconColor={stats.totalBalance >= 0 ? "text-emerald-600" : "text-red-600"}
          gradient={
            stats.totalBalance >= 0
              ? "bg-gradient-to-r from-emerald-500 to-green-500"
              : "bg-gradient-to-r from-red-500 to-red-600"
          }
          description="–û–±—â–∏–π –±–∞–ª–∞–Ω—Å –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤"
        />

        <ModernStatCard
          title="–ó–∞—Ä–∞–±–æ—Ç–∞–ª"
          value={formatCurrency(stats.totalIncome)}
          subtitle="–û–±—â–∏–π –¥–æ—Ö–æ–¥"
          icon={<TrendingUp className="h-5 w-5" />}
          iconColor="text-emerald-600"
          gradient="bg-gradient-to-r from-emerald-500 to-green-500"
          description="–°—É–º–º–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö –¥–æ—Ö–æ–¥–æ–≤"
          onClick={() => {
            setFilter("income")
            onPageChange?.("transactions")
          }}
        />

        <ModernStatCard
          title="–ü–æ—Ç—Ä–∞—Ç–∏–ª"
          value={formatCurrency(stats.totalExpenses)}
          subtitle="–û–±—â–∏–π —Ä–∞—Å—Ö–æ–¥"
          icon={<TrendingDown className="h-5 w-5" />}
          iconColor="text-red-600"
          gradient="bg-gradient-to-r from-red-500 to-red-600"
          description="–°—É–º–º–∞ –≤—Å–µ—Ö –≤–∞—à–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤"
          onClick={() => {
            setFilter("expense")
            onPageChange?.("transactions")
          }}
        />

        <ModernStatCard
          title="–û–ø–µ—Ä–∞—Ü–∏–π"
          value={stats.totalTransactions.toString()}
          subtitle={`${stats.monthlyTransactions} –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ`}
          icon={<Target className="h-5 w-5" />}
          iconColor="text-blue-600"
          gradient="bg-gradient-to-r from-blue-500 to-indigo-500"
          description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"
          onClick={() => onPageChange?.("transactions")}
        />
      </div>

      {/* –ú–µ—Å—è—á–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ */}
      <div className="mb-8">
        <div className="flex items-center space-x-2 mb-6">
          <Calendar className="h-5 w-5 text-emerald-600" />
          <h2 className="text-xl font-bold text-gray-900">–≠—Ç–æ—Ç –º–µ—Å—è—Ü</h2>
          <span className="text-gray-500">‚Äî {format(new Date(), "MMMM", { locale: ru })}</span>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-lg transition-all duration-200">
            <div className="text-center">
              <div className="flex items-center justify-center space-x-2 mb-4">
                <div className="p-2 rounded-xl bg-emerald-100">
                  <TrendingUp className="h-5 w-5 text-emerald-600" />
                </div>
                <h3 className="font-semibold text-gray-800">–î–æ—Ö–æ–¥—ã</h3>
              </div>
              <p className="text-4xl font-bold text-emerald-600 mb-2">
                {formatCurrency(stats.monthlyIncome)}
              </p>
              <p className="text-sm text-gray-500">
                {stats.monthlyIncome > 0 && stats.totalIncome > 0
                  ? `${((stats.monthlyIncome / stats.totalIncome) * 100).toFixed(
                      1
                    )}% –æ—Ç –æ–±—â–µ–≥–æ –¥–æ—Ö–æ–¥–∞`
                  : "–ü–æ–∫–∞ –¥–æ—Ö–æ–¥–æ–≤ –Ω–µ—Ç"}
              </p>
            </div>
          </div>

          <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-100 hover:shadow-lg transition-all duration-200">
            <div className="text-center">
              <div className="flex items-center justify-center space-x-2 mb-4">
                <div className="p-2 rounded-xl bg-red-100">
                  <TrendingDown className="h-5 w-5 text-red-600" />
                </div>
                <h3 className="font-semibold text-gray-800">–†–∞—Å—Ö–æ–¥—ã</h3>
              </div>
              <p className="text-4xl font-bold text-red-600 mb-2">
                {formatCurrency(stats.monthlyExpenses)}
              </p>
              <p className="text-sm text-gray-500">
                {stats.monthlyExpenses > 0 && stats.totalExpenses > 0
                  ? `${((stats.monthlyExpenses / stats.totalExpenses) * 100).toFixed(
                      1
                    )}% –æ—Ç –æ–±—â–∏—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤`
                  : "–†–∞—Å—Ö–æ–¥–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç"}
              </p>
            </div>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-100">
          <div className="flex items-center space-x-2 mb-6">
            <div className="p-2 rounded-xl bg-blue-100">
              <Target className="h-5 w-5 text-blue-600" />
            </div>
            <h3 className="text-lg font-bold text-gray-900">–í–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏</h3>
          </div>

          <div className="space-y-4">
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded-xl">
              <span className="text-gray-700 font-medium">–°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥</span>
              <span className="font-bold text-emerald-600">
                {stats.totalIncome > 0
                  ? formatCurrency(
                      stats.totalIncome / transactions.filter((t) => t.type === "income").length
                    )
                  : formatCurrency(0)}
              </span>
            </div>
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded-xl">
              <span className="text-gray-700 font-medium">–°—Ä–µ–¥–Ω–∏–π —Ä–∞—Å—Ö–æ–¥</span>
              <span className="font-bold text-red-600">
                {stats.totalExpenses > 0
                  ? formatCurrency(
                      stats.totalExpenses / transactions.filter((t) => t.type === "expense").length
                    )
                  : formatCurrency(0)}
              </span>
            </div>
            <div className="flex justify-between items-center p-3 bg-gray-50 rounded-xl">
              <span className="text-gray-700 font-medium">–û–ø–µ—Ä–∞—Ü–∏–π –≤ –º–µ—Å—è—Ü</span>
              <span className="font-bold text-blue-600">{stats.monthlyTransactions}</span>
            </div>
          </div>
        </div>

        <div className="bg-white rounded-2xl p-6 shadow-sm border border-gray-100">
          <div className="flex items-center space-x-2 mb-6">
            <div className="p-2 rounded-xl bg-purple-100">
              <Award className="h-5 w-5 text-purple-600" />
            </div>
            <h3 className="text-lg font-bold text-gray-900">–§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ</h3>
          </div>

          <div className="space-y-4">
            <div className="p-4 bg-gradient-to-r from-emerald-50 to-green-50 rounded-xl border border-emerald-200">
              <div className="flex justify-between items-center mb-2">
                <span className="text-emerald-700 font-medium">–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –¥–æ—Ö–æ–¥—ã/—Ä–∞—Å—Ö–æ–¥—ã</span>
                <span className="font-bold text-emerald-600">
                  {stats.totalExpenses > 0
                    ? (stats.totalIncome / stats.totalExpenses).toFixed(2)
                    : "‚àû"}
                </span>
              </div>
              <p className="text-xs text-emerald-600">
                {stats.totalExpenses > 0 && stats.totalIncome / stats.totalExpenses >= 1.2
                  ? "–û—Ç–ª–∏—á–Ω—ã–π –±–∞–ª–∞–Ω—Å! üéØ"
                  : "–°—Ç–æ–∏—Ç —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ—Ö–æ–¥—ã –∏–ª–∏ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞—Å—Ö–æ–¥—ã"}
              </p>
            </div>

            <div className="p-4 bg-gray-50 rounded-xl">
              <div className="flex justify-between items-center mb-2">
                <span className="text-gray-700 font-medium">–£—Ä–æ–≤–µ–Ω—å —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π</span>
                <span
                  className={`font-bold ${
                    stats.totalBalance >= 0 ? "text-emerald-600" : "text-red-600"
                  }`}>
                  {stats.totalIncome > 0
                    ? `${((stats.totalBalance / stats.totalIncome) * 100).toFixed(1)}%`
                    : "0%"}
                </span>
              </div>
              <div
                className={`text-xs ${
                  stats.totalBalance >= 0 ? "text-emerald-600" : "text-red-600"
                }`}>
                {stats.totalBalance >= 0
                  ? "–í—ã –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ—Ç–µ –¥–µ–Ω—å–≥–∏! üí™"
                  : "–¢—Ä–∞—Ç–∏—Ç–µ –±–æ–ª—å—à–µ, —á–µ–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ"}
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
