import React from "react"
import ReactDOM from "react-dom/client"
import { QueryClient, QueryClientProvider } from "@tanstack/react-query"
import App from "./App.tsx"
import "./index.css"
import { registerSW } from "virtual:pwa-register"
// import "./utils/debugStorage" // Debug utils –¥–ª—è localStorage

// –¢–∏–ø—ã –¥–ª—è debugStorage
declare global {
  interface Window {
    debugStorage: () => string
  }
}

// –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è debugStorage –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if (typeof window !== "undefined") {
  window.debugStorage = () => {
    try {
      const transactions = localStorage.getItem("finance-tracker-transactions")
      const categories = localStorage.getItem("finance-tracker-categories")
      console.log("üîç SIMPLE DEBUG:", {
        transactions: !!transactions,
        categories: !!categories,
        transactionsLength: transactions?.length || 0,
        categoriesLength: categories?.length || 0,
        localStorage: typeof localStorage,
        window: typeof window
      })
      return "‚úÖ debugStorage —Ä–∞–±–æ—Ç–∞–µ—Ç"
    } catch (error) {
      console.error("‚ùå debugStorage error:", error)
      return "‚ùå –æ—à–∏–±–∫–∞ debugStorage"
    }
  }
}

const queryClient = new QueryClient({
  defaultOptions: {
    queries: {
      staleTime: 1000 * 60 * 5 // 5 minutes
    }
  }
})

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker –¥–ª—è PWA
const updateSW = registerSW({
  onNeedRefresh() {
    if (confirm("–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å?")) {
      updateSW(true)
    }
  },
  onOfflineReady() {
    // –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ –æ—Ñ–ª–∞–π–Ω
  }
})

ReactDOM.createRoot(document.getElementById("root")!).render(
  <React.StrictMode>
    <QueryClientProvider client={queryClient}>
      <App />
    </QueryClientProvider>
  </React.StrictMode>
)
